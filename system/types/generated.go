package types

import "kego.io/system"

func init() {

	system.RegisterType("kego.io/system:@array", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for arrays", Id: "@array", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"items": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is a rule object, defining the type and restrictions on the value of the items", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Rule_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@rule", Package: "kego.io/system", Type: "@rule", Exists: true}}}, Optional: false}, "minItems": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the minimum number of items alowed in the array", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: true}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "maxItems": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the maximum number of items alowed in the array", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: true}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "uniqueItems": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "If this is true, each item must be unique", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Bool_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@bool", Package: "kego.io/system", Type: "@bool", Exists: true}}, Default: system.Bool{Value: false, Exists: true}}, Optional: true}}, Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:@bool", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for bools", Id: "@bool", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"default": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Default value of this is missing or null", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: true, Item: &system.Bool_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@bool", Package: "kego.io/system", Type: "@bool", Exists: true}}, Default: system.Bool{Value: false, Exists: false}}, Optional: true}}, Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:@context", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Automatically created basic rule for context", Id: "@context", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property(nil), Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:@int", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for integers", Id: "@int", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"default": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Default value if this property is omitted", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: true, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: false}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "multipleOf": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This restricts the number to be a multiple of the given number", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: false}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "minimum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This provides a lower bound for the restriction", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: false}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "maximum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This provides an upper bound for the restriction", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: false}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}}, Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:@map", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for maps", Id: "@map", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"minItems": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the minimum number of items alowed in the array", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: true}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "maxItems": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the maximum number of items alowed in the array", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: true}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "items": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is a rule object, defining the type and restrictions on the value of the items.", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Rule_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@rule", Package: "kego.io/system", Type: "@rule", Exists: true}}}, Optional: false}}, Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:@number", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for numbers", Id: "@number", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"exclusiveMaximum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "If this is true, the value must be less than maximum. If false or not provided, the value must be less than or equal to the maximum.", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Bool_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@bool", Package: "kego.io/system", Type: "@bool", Exists: true}}, Default: system.Bool{Value: false, Exists: true}}, Optional: true}, "default": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Default value if this property is omitted", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: true, Item: &system.Number_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@number", Package: "kego.io/system", Type: "@number", Exists: true}}, Default: system.Number{Value: 0, Exists: false}, ExclusiveMaximum: system.Bool{Value: false, Exists: true}, ExclusiveMinimum: system.Bool{Value: false, Exists: true}, Maximum: system.Number{Value: 0, Exists: false}, Minimum: system.Number{Value: 0, Exists: false}, MultipleOf: system.Number{Value: 0, Exists: false}}, Optional: true}, "multipleOf": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This restricts the number to be a multiple of the given number", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Number_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@number", Package: "kego.io/system", Type: "@number", Exists: true}}, Default: system.Number{Value: 0, Exists: false}, ExclusiveMaximum: system.Bool{Value: false, Exists: true}, ExclusiveMinimum: system.Bool{Value: false, Exists: true}, Maximum: system.Number{Value: 0, Exists: false}, Minimum: system.Number{Value: 0, Exists: false}, MultipleOf: system.Number{Value: 0, Exists: false}}, Optional: true}, "minimum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This provides a lower bound for the restriction", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Number_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@number", Package: "kego.io/system", Type: "@number", Exists: true}}, Default: system.Number{Value: 0, Exists: false}, ExclusiveMaximum: system.Bool{Value: false, Exists: true}, ExclusiveMinimum: system.Bool{Value: false, Exists: true}, Maximum: system.Number{Value: 0, Exists: false}, Minimum: system.Number{Value: 0, Exists: false}, MultipleOf: system.Number{Value: 0, Exists: false}}, Optional: true}, "exclusiveMinimum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "If this is true, the value must be greater than minimum. If false or not provided, the value must be greater than or equal to the minimum.", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Bool_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@bool", Package: "kego.io/system", Type: "@bool", Exists: true}}, Default: system.Bool{Value: false, Exists: true}}, Optional: true}, "maximum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This provides an upper bound for the restriction", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Number_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@number", Package: "kego.io/system", Type: "@number", Exists: true}}, Default: system.Number{Value: 0, Exists: false}, ExclusiveMaximum: system.Bool{Value: false, Exists: true}, ExclusiveMinimum: system.Bool{Value: false, Exists: true}, Maximum: system.Number{Value: 0, Exists: false}, Minimum: system.Number{Value: 0, Exists: false}, MultipleOf: system.Number{Value: 0, Exists: false}}, Optional: true}}, Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:@object", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Automatically created basic rule for object", Id: "@object", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property(nil), Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:@property", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Automatically created basic rule for property", Id: "@property", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property(nil), Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:@reference", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for references", Id: "@reference", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"default": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Default value of this is missing or null", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: true, Item: &system.Reference_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@reference", Package: "kego.io/system", Type: "@reference", Exists: true}}, Default: system.Reference{Value: "", Package: "", Type: "", Exists: false}}, Optional: true}}, Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:@rule", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Automatically created basic rule for rule", Id: "@rule", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property(nil), Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:@string", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for strings", Id: "@string", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"minLength": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "The value must be longer or equal to the provided minimum length", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: false}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "maxLength": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "The value must be shorter or equal to the provided maximum length", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: false}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "equal": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is a string that the value must match", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.String_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@string", Package: "kego.io/system", Type: "@string", Exists: true}}, Default: system.String{Value: "", Exists: false}, Enum: []system.String(nil), Equal: system.String{Value: "", Exists: false}, Format: system.String{Value: "", Exists: false}, MaxLength: system.Int{Value: 0, Exists: false}, MinLength: system.Int{Value: 0, Exists: false}, Pattern: system.String{Value: "", Exists: false}}, Optional: true}, "pattern": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is a regex to match the value to", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.String_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@string", Package: "kego.io/system", Type: "@string", Exists: true}}, Default: system.String{Value: "", Exists: false}, Enum: []system.String(nil), Equal: system.String{Value: "", Exists: false}, Format: system.String{Value: "", Exists: false}, MaxLength: system.Int{Value: 0, Exists: false}, MinLength: system.Int{Value: 0, Exists: false}, Pattern: system.String{Value: "", Exists: false}}, Optional: true}, "format": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This restricts the value to one of several built-in formats", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.String_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@string", Package: "kego.io/system", Type: "@string", Exists: true}}, Default: system.String{Value: "", Exists: false}, Enum: []system.String{system.String{Value: "date-time", Exists: true}, system.String{Value: "email", Exists: true}, system.String{Value: "hostname", Exists: true}, system.String{Value: "ipv4", Exists: true}, system.String{Value: "ipv6", Exists: true}, system.String{Value: "uri", Exists: true}}, Equal: system.String{Value: "", Exists: false}, Format: system.String{Value: "", Exists: false}, MaxLength: system.Int{Value: 0, Exists: false}, MinLength: system.Int{Value: 0, Exists: false}, Pattern: system.String{Value: "", Exists: false}}, Optional: true}, "default": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Default value of this is missing or null", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: true, Item: &system.String_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@string", Package: "kego.io/system", Type: "@string", Exists: true}}, Default: system.String{Value: "", Exists: false}, Enum: []system.String(nil), Equal: system.String{Value: "", Exists: false}, Format: system.String{Value: "", Exists: false}, MaxLength: system.Int{Value: 0, Exists: false}, MinLength: system.Int{Value: 0, Exists: false}, Pattern: system.String{Value: "", Exists: false}}, Optional: true}, "enum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "The value of this string is restricted to one of the provided values", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Array_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@array", Package: "kego.io/system", Type: "@array", Exists: true}}, Items: &system.String_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@string", Package: "kego.io/system", Type: "@string", Exists: true}}, Default: system.String{Value: "", Exists: false}, Enum: []system.String(nil), Equal: system.String{Value: "", Exists: false}, Format: system.String{Value: "", Exists: false}, MaxLength: system.Int{Value: 0, Exists: false}, MinLength: system.Int{Value: 0, Exists: false}, Pattern: system.String{Value: "", Exists: false}}, MaxItems: system.Int{Value: 0, Exists: false}, MinItems: system.Int{Value: 0, Exists: false}, UniqueItems: system.Bool{Value: false, Exists: true}}, Optional: true}}, Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:@type", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Automatically created basic rule for type", Id: "@type", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property(nil), Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:array", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the native json array data type", Id: "array", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference(nil), Native: system.String{Value: "array", Exists: true}, Properties: map[string]*system.Property(nil), Rule: &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for arrays", Id: "@array", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"items": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is a rule object, defining the type and restrictions on the value of the items", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Rule_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@rule", Package: "kego.io/system", Type: "@rule", Exists: true}}}, Optional: false}, "minItems": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the minimum number of items alowed in the array", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: true}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "maxItems": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the maximum number of items alowed in the array", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: true}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "uniqueItems": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "If this is true, each item must be unique", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Bool_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@bool", Package: "kego.io/system", Type: "@bool", Exists: true}}, Default: system.Bool{Value: false, Exists: true}}, Optional: true}}, Rule: (*system.Type)(nil)}})

	system.RegisterType("kego.io/system:bool", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the native json bool data type", Id: "bool", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference(nil), Native: system.String{Value: "bool", Exists: true}, Properties: map[string]*system.Property(nil), Rule: &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for bools", Id: "@bool", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"default": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Default value of this is missing or null", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: true, Item: &system.Bool_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@bool", Package: "kego.io/system", Type: "@bool", Exists: true}}, Default: system.Bool{Value: false, Exists: false}}, Optional: true}}, Rule: (*system.Type)(nil)}})

	system.RegisterType("kego.io/system:context", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Unmarshal context.", Id: "context", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: true, Extends: system.Reference{Value: "", Package: "", Type: "", Exists: false}, Interface: false, Is: []system.Reference(nil), Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property(nil), Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:int", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the int data type", Id: "int", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference(nil), Native: system.String{Value: "number", Exists: true}, Properties: map[string]*system.Property(nil), Rule: &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for integers", Id: "@int", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"default": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Default value if this property is omitted", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: true, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: false}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "multipleOf": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This restricts the number to be a multiple of the given number", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: false}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "minimum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This provides a lower bound for the restriction", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: false}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "maximum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This provides an upper bound for the restriction", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: false}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}}, Rule: (*system.Type)(nil)}})

	system.RegisterType("kego.io/system:map", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the native json object data type.", Id: "map", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference(nil), Native: system.String{Value: "map", Exists: true}, Properties: map[string]*system.Property(nil), Rule: &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for maps", Id: "@map", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"minItems": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the minimum number of items alowed in the array", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: true}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "maxItems": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the maximum number of items alowed in the array", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: true}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "items": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is a rule object, defining the type and restrictions on the value of the items.", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Rule_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@rule", Package: "kego.io/system", Type: "@rule", Exists: true}}}, Optional: false}}, Rule: (*system.Type)(nil)}})

	system.RegisterType("kego.io/system:number", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the native json number data type", Id: "number", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference(nil), Native: system.String{Value: "number", Exists: true}, Properties: map[string]*system.Property(nil), Rule: &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for numbers", Id: "@number", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"minimum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This provides a lower bound for the restriction", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Number_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@number", Package: "kego.io/system", Type: "@number", Exists: true}}, Default: system.Number{Value: 0, Exists: false}, ExclusiveMaximum: system.Bool{Value: false, Exists: true}, ExclusiveMinimum: system.Bool{Value: false, Exists: true}, Maximum: system.Number{Value: 0, Exists: false}, Minimum: system.Number{Value: 0, Exists: false}, MultipleOf: system.Number{Value: 0, Exists: false}}, Optional: true}, "exclusiveMinimum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "If this is true, the value must be greater than minimum. If false or not provided, the value must be greater than or equal to the minimum.", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Bool_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@bool", Package: "kego.io/system", Type: "@bool", Exists: true}}, Default: system.Bool{Value: false, Exists: true}}, Optional: true}, "maximum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This provides an upper bound for the restriction", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Number_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@number", Package: "kego.io/system", Type: "@number", Exists: true}}, Default: system.Number{Value: 0, Exists: false}, ExclusiveMaximum: system.Bool{Value: false, Exists: true}, ExclusiveMinimum: system.Bool{Value: false, Exists: true}, Maximum: system.Number{Value: 0, Exists: false}, Minimum: system.Number{Value: 0, Exists: false}, MultipleOf: system.Number{Value: 0, Exists: false}}, Optional: true}, "exclusiveMaximum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "If this is true, the value must be less than maximum. If false or not provided, the value must be less than or equal to the maximum.", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Bool_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@bool", Package: "kego.io/system", Type: "@bool", Exists: true}}, Default: system.Bool{Value: false, Exists: true}}, Optional: true}, "default": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Default value if this property is omitted", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: true, Item: &system.Number_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@number", Package: "kego.io/system", Type: "@number", Exists: true}}, Default: system.Number{Value: 0, Exists: false}, ExclusiveMaximum: system.Bool{Value: false, Exists: true}, ExclusiveMinimum: system.Bool{Value: false, Exists: true}, Maximum: system.Number{Value: 0, Exists: false}, Minimum: system.Number{Value: 0, Exists: false}, MultipleOf: system.Number{Value: 0, Exists: false}}, Optional: true}, "multipleOf": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This restricts the number to be a multiple of the given number", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Number_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@number", Package: "kego.io/system", Type: "@number", Exists: true}}, Default: system.Number{Value: 0, Exists: false}, ExclusiveMaximum: system.Bool{Value: false, Exists: true}, ExclusiveMinimum: system.Bool{Value: false, Exists: true}, Maximum: system.Number{Value: 0, Exists: false}, Minimum: system.Number{Value: 0, Exists: false}, MultipleOf: system.Number{Value: 0, Exists: false}}, Optional: true}}, Rule: (*system.Type)(nil)}})

	system.RegisterType("kego.io/system:object", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the most basic type.", Id: "object", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "", Package: "", Type: "", Exists: false}, Interface: false, Is: []system.Reference(nil), Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"rules": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Extra validation rules for this object or descendants", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Map_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@map", Package: "kego.io/system", Type: "@map", Exists: true}}, Items: &system.Rule_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@rule", Package: "kego.io/system", Type: "@rule", Exists: true}}}, MaxItems: system.Int{Value: 0, Exists: false}, MinItems: system.Int{Value: 0, Exists: false}}, Optional: true}, "type": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Type of the object.", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Reference_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@reference", Package: "kego.io/system", Type: "@reference", Exists: true}}, Default: system.Reference{Value: "", Package: "", Type: "", Exists: false}}, Optional: false}, "id": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "All global objects should have an id.", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.JsonString_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/json:@string", Package: "kego.io/json", Type: "@string", Exists: true}}}, Optional: true}, "description": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Description for the developer", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.JsonString_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/json:@string", Package: "kego.io/json", Type: "@string", Exists: true}}}, Optional: true}, "context": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Unmarshaling context. This should not be in the json - it's added by the unmarshaler.", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Context_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@context", Package: "kego.io/system", Type: "@context", Exists: true}}}, Optional: true}}, Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:property", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is a property of a type", Id: "property", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference(nil), Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"optional": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This specifies that the field is optional", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.JsonBool_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/json:@bool", Package: "kego.io/json", Type: "@bool", Exists: true}}}, Optional: true}, "defaulter": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This specifies that the field is the default value for a rule", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.JsonBool_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/json:@bool", Package: "kego.io/json", Type: "@bool", Exists: true}}}, Optional: true}, "item": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is a rule object, defining the type and restrictions on the value of the this property", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Rule_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@rule", Package: "kego.io/system", Type: "@rule", Exists: true}}}, Optional: false}}, Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:reference", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is a reference to another object, of the form: [local id] or [import name]:[id] or [full package path]:[id]", Id: "reference", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference(nil), Native: system.String{Value: "string", Exists: true}, Properties: map[string]*system.Property(nil), Rule: &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for references", Id: "@reference", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"default": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Default value of this is missing or null", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: true, Item: &system.Reference_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@reference", Package: "kego.io/system", Type: "@reference", Exists: true}}, Default: system.Reference{Value: "", Package: "", Type: "", Exists: false}}, Optional: true}}, Rule: (*system.Type)(nil)}})

	system.RegisterType("kego.io/system:rule", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is one of several rule types, derived from the rules property of other types", Id: "rule", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: true, Is: []system.Reference(nil), Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property(nil), Rule: (*system.Type)(nil)})

	system.RegisterType("kego.io/system:string", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the native json string data type", Id: "string", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference(nil), Native: system.String{Value: "string", Exists: true}, Properties: map[string]*system.Property(nil), Rule: &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Restriction rules for strings", Id: "@string", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference{system.Reference{Value: "kego.io/system:rule", Package: "kego.io/system", Type: "rule", Exists: true}}, Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"maxLength": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "The value must be shorter or equal to the provided maximum length", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: false}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}, "equal": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is a string that the value must match", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.String_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@string", Package: "kego.io/system", Type: "@string", Exists: true}}, Default: system.String{Value: "", Exists: false}, Enum: []system.String(nil), Equal: system.String{Value: "", Exists: false}, Format: system.String{Value: "", Exists: false}, MaxLength: system.Int{Value: 0, Exists: false}, MinLength: system.Int{Value: 0, Exists: false}, Pattern: system.String{Value: "", Exists: false}}, Optional: true}, "pattern": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is a regex to match the value to", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.String_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@string", Package: "kego.io/system", Type: "@string", Exists: true}}, Default: system.String{Value: "", Exists: false}, Enum: []system.String(nil), Equal: system.String{Value: "", Exists: false}, Format: system.String{Value: "", Exists: false}, MaxLength: system.Int{Value: 0, Exists: false}, MinLength: system.Int{Value: 0, Exists: false}, Pattern: system.String{Value: "", Exists: false}}, Optional: true}, "format": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This restricts the value to one of several built-in formats", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.String_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@string", Package: "kego.io/system", Type: "@string", Exists: true}}, Default: system.String{Value: "", Exists: false}, Enum: []system.String{system.String{Value: "date-time", Exists: true}, system.String{Value: "email", Exists: true}, system.String{Value: "hostname", Exists: true}, system.String{Value: "ipv4", Exists: true}, system.String{Value: "ipv6", Exists: true}, system.String{Value: "uri", Exists: true}}, Equal: system.String{Value: "", Exists: false}, Format: system.String{Value: "", Exists: false}, MaxLength: system.Int{Value: 0, Exists: false}, MinLength: system.Int{Value: 0, Exists: false}, Pattern: system.String{Value: "", Exists: false}}, Optional: true}, "default": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Default value of this is missing or null", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: true, Item: &system.String_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@string", Package: "kego.io/system", Type: "@string", Exists: true}}, Default: system.String{Value: "", Exists: false}, Enum: []system.String(nil), Equal: system.String{Value: "", Exists: false}, Format: system.String{Value: "", Exists: false}, MaxLength: system.Int{Value: 0, Exists: false}, MinLength: system.Int{Value: 0, Exists: false}, Pattern: system.String{Value: "", Exists: false}}, Optional: true}, "enum": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "The value of this string is restricted to one of the provided values", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Array_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@array", Package: "kego.io/system", Type: "@array", Exists: true}}, Items: &system.String_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@string", Package: "kego.io/system", Type: "@string", Exists: true}}, Default: system.String{Value: "", Exists: false}, Enum: []system.String(nil), Equal: system.String{Value: "", Exists: false}, Format: system.String{Value: "", Exists: false}, MaxLength: system.Int{Value: 0, Exists: false}, MinLength: system.Int{Value: 0, Exists: false}, Pattern: system.String{Value: "", Exists: false}}, MaxItems: system.Int{Value: 0, Exists: false}, MinItems: system.Int{Value: 0, Exists: false}, UniqueItems: system.Bool{Value: false, Exists: true}}, Optional: true}, "minLength": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "The value must be longer or equal to the provided minimum length", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Int_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@int", Package: "kego.io/system", Type: "@int", Exists: true}}, Default: system.Int{Value: 0, Exists: false}, Maximum: system.Int{Value: 0, Exists: false}, Minimum: system.Int{Value: 0, Exists: false}, MultipleOf: system.Int{Value: 0, Exists: false}}, Optional: true}}, Rule: (*system.Type)(nil)}})

	system.RegisterType("kego.io/system:type", &system.Type{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the most basic type.", Id: "type", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:type", Package: "kego.io/system", Type: "type", Exists: true}}, Exclude: false, Extends: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}, Interface: false, Is: []system.Reference(nil), Native: system.String{Value: "object", Exists: true}, Properties: map[string]*system.Property{"native": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "This is the native json type that represents this type. If omitted, default is object.", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.String_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@string", Package: "kego.io/system", Type: "@string", Exists: true}}, Default: system.String{Value: "object", Exists: true}, Enum: []system.String{system.String{Value: "string", Exists: true}, system.String{Value: "number", Exists: true}, system.String{Value: "bool", Exists: true}, system.String{Value: "array", Exists: true}, system.String{Value: "object", Exists: true}, system.String{Value: "map", Exists: true}}, Equal: system.String{Value: "", Exists: false}, Format: system.String{Value: "", Exists: false}, MaxLength: system.Int{Value: 0, Exists: false}, MinLength: system.Int{Value: 0, Exists: false}, Pattern: system.String{Value: "", Exists: false}}, Optional: true}, "interface": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Is this type an interface?", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.JsonBool_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/json:@bool", Package: "kego.io/json", Type: "@bool", Exists: true}}}, Optional: true}, "exclude": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Exclude this type from the generated json?", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.JsonBool_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/json:@bool", Package: "kego.io/json", Type: "@bool", Exists: true}}}, Optional: true}, "properties": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Each field is listed with it's type", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Map_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@map", Package: "kego.io/system", Type: "@map", Exists: true}}, Items: &system.Property_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@property", Package: "kego.io/system", Type: "@property", Exists: true}}}, MaxItems: system.Int{Value: 0, Exists: false}, MinItems: system.Int{Value: 0, Exists: false}}, Optional: true}, "rule": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Embedded type that defines restriction rules for this type. By convention, the ID should be this type prefixed with the @ character.", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Type_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@type", Package: "kego.io/system", Type: "@type", Exists: true}}}, Optional: true}, "extends": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Type which this should extend", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Reference_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@reference", Package: "kego.io/system", Type: "@reference", Exists: true}}, Default: system.Reference{Value: "kego.io/system:object", Package: "kego.io/system", Type: "object", Exists: true}}, Optional: true}, "is": &system.Property{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "Array of interface types that this type should support", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:property", Package: "kego.io/system", Type: "property", Exists: true}}, Defaulter: false, Item: &system.Array_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@array", Package: "kego.io/system", Type: "@array", Exists: true}}, Items: &system.Reference_rule{Object: &system.Object{Context: &system.Context{Imports: map[string]string{}, Package: "kego.io/system"}, Description: "", Id: "", Rules: map[string]system.Rule(nil), Type: system.Reference{Value: "kego.io/system:@reference", Package: "kego.io/system", Type: "@reference", Exists: true}}, Default: system.Reference{Value: "", Package: "", Type: "", Exists: false}}, MaxItems: system.Int{Value: 0, Exists: false}, MinItems: system.Int{Value: 0, Exists: false}, UniqueItems: system.Bool{Value: false, Exists: true}}, Optional: true}}, Rule: (*system.Type)(nil)})

}
