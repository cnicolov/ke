Remove globals
Remove YAML
Remove recursive

Types
-----
foo -> Foo (bare struct)
$foo -> FooInterface (interface: Foo() *Foo) ??? will I ever need this?
@foo -> FooRule (rule struct)

Interfaces
----------
bar -> Bar (interface type)
@bar -> BarRule (rule struct)



In package foo
--------------

{"type": "system:type", "id": "bar", "fields": {"baz": "system:@string"}}

type Bar struct {
	Baz system.String
}
type BarInterface interface {
	FooBar() *Bar
}
func (o *Bar) FooBar() *Bar {
	return o
}
type FooRule struct {}



Refactor base types. Each type should have an interface.

Object -> ObjectInterface

Generated structs should have interfaces as members.

This gives us the problem that native types don't have type information embedded in the json, so how do we unmarshal?

Solution?
json.Register(path string, name string, typ reflect.Type, iface reflect.Type, hash uint64) {...}

The json package knows the default type for each interface. When unmarshaling a native json element into an interface, it attempts to unmarshall into the default type.
