{{ $path := .Path }}
{{ $imports := .Imports }}
{{ $nonTypesPath := .NonTypesPath }}
package {{ $path | name }}

import (
	{{ if not (eq $path "kego.io/system") }}
		"kego.io/system"
	{{ end }}

	{{ if not (eq $path "kego.io/system/types") }}
		_ "kego.io/system/types"
	{{ end }}

	{{ range $importName, $importPath := $imports }}
		{{ import $importName $importPath $path }}
		{{ types $importPath $path }}
	{{ end }}
)

func init() {
	{{ range $pointer := .Pointers }}
		{{ $pointer }}
	{{ end }}

	{{ range $typeName, $source := .Types }}
		{{ reference "kego.io/system" "RegisterType" $path $imports }}({{ $typeName | quote }}, {{ $source }})
	{{ end }}

	// If there's no references to the non types package in here we
	// won't be able to compile, so we force it by calling a noop.
	{{ reference $nonTypesPath "DoNothing" $path $imports }}()
}